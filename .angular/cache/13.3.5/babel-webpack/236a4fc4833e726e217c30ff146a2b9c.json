{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/admin.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction AdminLoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \"Invalid Id or Password\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdminLoginComponent_div_8_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 12);\n    i0.ɵɵtext(1, \"*Admin ID is madatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdminLoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AdminLoginComponent_div_8_small_1_Template, 2, 0, \"small\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.get(\"adminId\").errors == null ? null : ctx_r1.loginForm.get(\"adminId\").errors.required);\n  }\n}\n\nfunction AdminLoginComponent_div_11_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 12);\n    i0.ɵɵtext(1, \"*Password must be minimum 8 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdminLoginComponent_div_11_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 12);\n    i0.ɵɵtext(1, \"*Password is madatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdminLoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AdminLoginComponent_div_11_small_1_Template, 2, 0, \"small\", 11);\n    i0.ɵɵtemplate(2, AdminLoginComponent_div_11_small_2_Template, 2, 0, \"small\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loginForm.get(\"password\").errors == null ? null : ctx_r2.loginForm.get(\"password\").errors.minlength);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loginForm.get(\"password\").errors == null ? null : ctx_r2.loginForm.get(\"password\").errors.required);\n  }\n}\n\nexport let AdminLoginComponent = /*#__PURE__*/(() => {\n  class AdminLoginComponent {\n    constructor(router, adminService, formBuilder) {\n      this.router = router;\n      this.adminService = adminService;\n      this.formBuilder = formBuilder;\n      this.failure = {\n        value: false\n      };\n      this.adminData = null;\n      /* ----login form--- */\n\n      this.loginForm = this.formBuilder.group({\n        adminId: [null, Validators.required],\n        password: [null, [Validators.required, Validators.minLength(8)]]\n      });\n    }\n\n    ngOnInit() {}\n    /* ----method for admin login------- */\n\n\n    submit() {\n      this.adminService.adminLogin(this.loginForm.value).subscribe(data => {\n        this.adminData = data;\n        this.failure.value = false;\n        localStorage.setItem(\"adminId\", this.adminData.adminId);\n        this.router.navigate([\"/adminHome\"]);\n      }, error => {\n        this.failure.value = true;\n        this.loginForm.reset();\n      });\n    }\n\n  }\n\n  AdminLoginComponent.ɵfac = function AdminLoginComponent_Factory(t) {\n    return new (t || AdminLoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AdminService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  AdminLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminLoginComponent,\n    selectors: [[\"app-admin-login\"]],\n    decls: 19,\n    vars: 9,\n    consts: [[1, \"container\"], [\"align\", \"center\", 1, \"transbox\", 2, \"width\", \"30%\", \"padding-bottom\", \"1%\", \"padding-top\", \"4%\"], [2, \"color\", \"white\"], [\"class\", \"alert-danger\", 4, \"ngIf\"], [1, \"form-group\", 3, \"formGroup\", \"ngSubmit\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"adminId\", \"placeholder\", \"Admin ID\", 1, \"form-control\", 2, \"text-align\", \"center\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", 2, \"text-align\", \"center\"], [\"type\", \"submit\", \"value\", \"Log In\", 1, \"btn\", \"btn-primary\", 2, \"width\", \"80%\", 3, \"disabled\"], [\"routerLink\", \"/userLogin\"], [1, \"alert-danger\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n    template: function AdminLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, AdminLoginComponent_div_4_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function AdminLoginComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵtemplate(8, AdminLoginComponent_div_8_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelement(9, \"input\", 6)(10, \"br\");\n        i0.ɵɵtemplate(11, AdminLoginComponent_div_11_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelement(12, \"input\", 7)(13, \"br\")(14, \"input\", 8)(15, \"br\")(16, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"a\", 9);\n        i0.ɵɵtext(18, \"User Login\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.failure.value);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"adminId\").invalid && ctx.loginForm.get(\"adminId\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.loginForm.get(\"adminId\").invalid && ctx.loginForm.get(\"adminId\").touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"password\").invalid && ctx.loginForm.get(\"password\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.loginForm.get(\"password\").invalid && ctx.loginForm.get(\"password\").touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    directives: [i4.NgIf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i1.RouterLinkWithHref],\n    styles: [\".jumbotron[_ngcontent-%COMP%]{padding-top:0;padding-bottom:5px;background-size:cover;height:560px}div.transbox[_ngcontent-%COMP%]{border-radius:20px;padding:40px 30px;margin-top:100px;opacity:1;box-shadow:-5px -5px 5px #f4f7faa2,5px 5px 5px #f6f8faab}\"]\n  });\n  return AdminLoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}