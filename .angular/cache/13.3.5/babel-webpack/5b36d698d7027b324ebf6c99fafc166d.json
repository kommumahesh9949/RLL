{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { Validators } from \"@angular/forms\";\nlet UpdateUserDetailsComponent = class UpdateUserDetailsComponent {\n  constructor(formBuilder, router, userService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.userService = userService;\n    this.userId = null;\n    this.user = null;\n    /* ---- update form------ */\n\n    this.updateForm = this.formBuilder.group({\n      userName: [null, Validators.required],\n      email: [null, Validators.required],\n      phone: [null, [Validators.required, Validators.pattern(\"[6789][0-9]{9}\")]],\n      password: [null, [Validators.required, Validators.minLength(8)]],\n      confirmPassword: [null, [Validators.required]]\n    }, {\n      validators: this.passwordValidator\n    });\n  }\n\n  ngOnInit() {\n    this.userId = localStorage.getItem(\"userId\");\n    console.log(this.userId);\n\n    if (this.userId == null) {\n      this.router.navigate([\"/error\", \"login to continue\"]);\n    } else {\n      this.userId = parseInt(this.userId);\n      this.userService.getUser(this.userId).subscribe(data => {\n        this.user = data;\n      }, error => {\n        this.router.navigate([\"/error\", \"not logged in, login to continue\"]);\n      });\n    }\n  }\n  /* ------password validator------- */\n\n\n  passwordValidator(control) {\n    const pass = control.get(\"password\");\n    const cnfm = control.get(\"confirmPassword\");\n\n    if (pass && cnfm && pass.value !== cnfm.value) {\n      return {\n        mismatch: true\n      };\n    } else {\n      return null;\n    }\n  }\n\n  submit() {\n    this.updateForm.removeControl(\"confirmPassword\");\n    let data = this.updateForm.value;\n    data.userId = this.userId;\n    this.userService.updateUser(data).subscribe(data => {\n      this.router.navigate([\"/userHome\"]);\n    }, error => {\n      this.router.navigate([\"/error\", \"unable to update\"]);\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"userId\");\n    this.router.navigate([\"/userLogin\"]);\n  }\n\n};\nUpdateUserDetailsComponent = __decorate([Component({\n  selector: \"app-update-user-details\",\n  templateUrl: \"./update-user-details.component.html\",\n  styleUrls: [\"./update-user-details.component.css\"]\n})], UpdateUserDetailsComponent);\nexport { UpdateUserDetailsComponent };","map":null,"metadata":{},"sourceType":"module"}