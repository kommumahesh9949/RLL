{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { Validators } from \"@angular/forms\";\nlet AddPassengersComponent = class AddPassengersComponent {\n  constructor(formBuilder, route, router, userService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.userService = userService;\n    this.userId = null;\n    this.busNumber = null;\n    this.user = null;\n    /* ---passenger form group array---- */\n\n    this.passengerArrayForm = this.formBuilder.group({\n      passengers: this.formBuilder.array([this.addPassengerGroup()])\n    });\n  }\n\n  ngOnInit() {\n    this.userId = localStorage.getItem(\"userId\");\n\n    if (this.userId == null) {\n      this.router.navigate([\"/error\", \"login to continue...\"]);\n    } else {\n      this.userId = parseInt(this.userId);\n      this.userService.getUser(this.userId).subscribe(data => {\n        this.user = data;\n      }, error => {\n        this.router.navigate([\"/error\", \"not logged in, login to continue\"]);\n      }), this.route.paramMap.subscribe(params => {\n        this.busNumber = params.get(\"busNumber\");\n      });\n    }\n  }\n  /* ---method to create dynamic form group----- */\n\n\n  addPassengerGroup() {\n    return this.formBuilder.group({\n      name: [null, [Validators.required, Validators.pattern(/^[A-Za-z\\s]*$/)]],\n      age: [null, [Validators.required, Validators.min(1), Validators.max(100)]],\n      luggage: [null, [Validators.required, Validators.min(0), Validators.max(25)]]\n    });\n  }\n  /* --getter for passengers------ */\n\n\n  get passengerArray() {\n    return this.passengerArrayForm.get(\"passengers\");\n  }\n  /* -----method to add more passengers------ */\n\n\n  addMorePassengers() {\n    this.passengerArray.push(this.addPassengerGroup());\n  }\n  /* ----method to remove passengers---- */\n\n\n  removePassenger(index) {\n    this.passengerArray.removeAt(index);\n  }\n\n  logout() {\n    localStorage.removeItem(\"userId\");\n    this.router.navigate([\"/userLogin\"]);\n  }\n\n  submit() {\n    if (this.passengerArray.length < 1) {\n      alert(\"no data provided\");\n    } else if (this.busNumber == null) {\n      this.router.navigate([\"/error\", \"bus not provided\"]);\n    } else {\n      this.busNumber = parseInt(this.busNumber);\n      this.userService.addBooking(this.busNumber, this.userId, this.passengerArrayForm.value).subscribe(data => {\n        alert(\"booking Successful\");\n        this.router.navigate([\"/userHome\"]);\n      }, error => {\n        this.router.navigate([\"/error\", \"Booking Successful. Ticket has been mailed to  you.\"]);\n      });\n    }\n  }\n\n};\nAddPassengersComponent = __decorate([Component({\n  selector: \"app-add-passengers\",\n  templateUrl: \"./add-passengers.component.html\",\n  styleUrls: [\"./add-passengers.component.css\"]\n})], AddPassengersComponent);\nexport { AddPassengersComponent };","map":null,"metadata":{},"sourceType":"module"}