{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { Validators } from \"@angular/forms\";\nlet AddBusDetailsComponent = class AddBusDetailsComponent {\n  constructor(adminService, router, formBuilder) {\n    this.adminService = adminService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.adminId = null;\n    this.adminDetails = null;\n    /*\r\n    * --------form for bus details---------\r\n    *\r\n    *\r\n    * */\n\n    this.busForm = this.formBuilder.group({\n      departureBusstop: [null, Validators.required],\n      arrivalBusstop: [null, Validators.required],\n      departureDate: [null, [Validators.required, this.departureDateValidator]],\n      arrivalDate: [null, [Validators.required]],\n      availableSeats: [null, [Validators.required, Validators.max(100), Validators.min(0)]],\n      arrivalTime: [null, Validators.required],\n      departureTime: [null, Validators.required],\n      busVendor: [null, Validators.required],\n      cost: [null, [Validators.required, Validators.min(1), Validators.max(10000)]]\n    }, {\n      validators: this.arrivalDateValidator\n    });\n  }\n\n  ngOnInit() {\n    this.adminId = localStorage.getItem(\"adminId\");\n\n    if (this.adminId == null) {\n      this.router.navigate([\"/error\", \"admin not logged in login to continue\"]);\n    }\n\n    this.adminId = parseInt(this.adminId);\n    this.adminService.getAdminDetails(this.adminId).subscribe(data => {\n      this.adminDetails = data;\n    }, error => {\n      this.router.navigate([\"/error\", \"admin not logged in login to continue\"]);\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"adminId\");\n    this.router.navigate([\"/adminLogin\"]);\n  }\n  /* --------validator method for departure date----\r\n  */\n\n\n  departureDateValidator(control) {\n    const inputDate = new Date(control.value);\n    const currentDate = new Date();\n\n    if (inputDate < currentDate) {\n      return {\n        dateError: true\n      };\n    }\n\n    return null;\n  }\n  /* ----validator method for arrival date---------- */\n\n\n  arrivalDateValidator(control) {\n    const depDate = control.get('departureDate');\n    const arrDate = control.get('arrivalDate');\n\n    if (depDate && arrDate && new Date(depDate.value) > new Date(arrDate.value)) {\n      return {\n        arrivalDateError: true\n      };\n    } else {\n      return null;\n    }\n  }\n\n  onSubmit() {\n    this.adminService.addBus(this.busForm.value).subscribe(data => {\n      console.log(data);\n      this.router.navigate([\"/adminHome\"]);\n    }, error => {\n      this.router.navigate([\"/error\", \"error occured unable to add\"]);\n    });\n  }\n\n  gotoList() {\n    this.router.navigate([\"/allBussDetails\"]);\n  }\n\n};\nAddBusDetailsComponent = __decorate([Component({\n  selector: \"app-add-bus-details\",\n  templateUrl: \"./add-bus-details.component.html\",\n  styleUrls: [\"./add-bus-details.component.css\"]\n})], AddBusDetailsComponent);\nexport { AddBusDetailsComponent };","map":null,"metadata":{},"sourceType":"module"}