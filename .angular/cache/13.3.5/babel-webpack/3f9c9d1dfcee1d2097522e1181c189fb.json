{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/admin.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction UpdateBusComponent_small_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"Please fill the departure Busstop\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateBusComponent_small_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"Please fill the arrival Busstop\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateBusComponent_small_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"Invalid or no input provided\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateBusComponent_small_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"invalid or no date provided\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateBusComponent_small_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"mandatory Field\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateBusComponent_small_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"must be greater than or equal departure date\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateBusComponent_small_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"Please fill the arrival time\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateBusComponent_small_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"Please fill the departure time\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateBusComponent_small_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"Bus vendor is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateBusComponent_small_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"invalid price provided\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let UpdateBusComponent = /*#__PURE__*/(() => {\n  class UpdateBusComponent {\n    constructor(formBuilder, router, route, adminService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.route = route;\n      this.adminService = adminService;\n      this.adminId = null;\n      this.adminDetails = null;\n      this.busNumber = null;\n      this.busForm = this.formBuilder.group({\n        departureBusstop: [null, Validators.required],\n        arrivalBusstop: [null, Validators.required],\n        departureDate: [null, [Validators.required, this.departureDateValidator]],\n        arrivalDate: [null, [Validators.required]],\n        availableSeats: [null, [Validators.required, Validators.max(100), Validators.min(0)]],\n        arrivalTime: [null, Validators.required],\n        departureTime: [null, Validators.required],\n        busVendor: [null, Validators.required],\n        cost: [null, [Validators.required, Validators.min(1), Validators.max(10000)]]\n      }, {\n        validators: this.arrivalDateValidator\n      });\n    }\n\n    ngOnInit() {\n      this.adminId = localStorage.getItem(\"adminId\");\n\n      if (this.adminId == null) {\n        this.router.navigate([\"/error\", \"admin not logged in login to continue\"]);\n      }\n\n      this.adminId = parseInt(this.adminId);\n      this.adminService.getAdminDetails(this.adminId).subscribe(data => {\n        this.adminDetails = data;\n      }, error => {\n        this.router.navigate([\"/error\", \"admin not logged in login to continue\"]);\n      });\n    }\n\n    logout() {\n      localStorage.removeItem(\"adminId\");\n      this.router.navigate([\"/adminLogin\"]);\n    }\n\n    departureDateValidator(control) {\n      const inputDate = new Date(control.value);\n      const currentDate = new Date();\n\n      if (inputDate < currentDate) {\n        return {\n          dateError: true\n        };\n      }\n\n      return null;\n    }\n\n    arrivalDateValidator(control) {\n      const depDate = control.get(\"departureDate\");\n      const arrDate = control.get(\"arrivalDate\");\n\n      if (depDate && arrDate && new Date(depDate.value) > new Date(arrDate.value)) {\n        return {\n          arrivalDateError: true\n        };\n      } else {\n        return null;\n      }\n    }\n\n    onSubmit() {\n      let data = this.busForm.value;\n\n      if (this.busNumber != NaN) {\n        data.busNumber = this.busNumber;\n      }\n\n      this.adminService.modifyBus(data).subscribe(data => {\n        this.router.navigate([\"/adminHome\"]);\n      }, error => {\n        this.router.navigate([\"/error\", \"unable to update\"]);\n      });\n    }\n\n  }\n\n  UpdateBusComponent.ɵfac = function UpdateBusComponent_Factory(t) {\n    return new (t || UpdateBusComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.AdminService));\n  };\n\n  UpdateBusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateBusComponent,\n    selectors: [[\"app-update-bus\"]],\n    decls: 55,\n    vars: 30,\n    consts: [[1, \"contianer-fluid\"], [1, \"updateBus\", \"jumbotron\"], [3, \"formGroup\", \"ngSubmit\"], [\"align\", \"center\"], [\"routerLink\", \"/adminHome\", 1, \"btn\", \"btn-primary\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"Arrival Busstop\", \"formControlName\", \"arrivalBusstop\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Departure Busstop\", \"formControlName\", \"departureBusstop\", 1, \"form-control\"], [\"type\", \"number\", \"placeholder\", \"Available seats\", \"formControlName\", \"availableSeats\", 1, \"form-control\"], [\"type\", \"date\", \"placeholder\", \"Departure Date\", \"formControlName\", \"departureDate\", 1, \"form-control\"], [\"type\", \"date\", \"placeholder\", \"Arrival Date\", \"formControlName\", \"arrivalDate\", 1, \"form-control\"], [\"type\", \"time\", \"placeholder\", \"Arrival Time\", \"formControlName\", \"arrivalTime\", 1, \"form-control\"], [\"for\", \"name\"], [\"type\", \"time\", \"placeholder\", \"departure Time\", \"formControlName\", \"departureTime\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"bus Vendor\", \"formControlName\", \"busVendor\", 1, \"form-control\"], [\"type\", \"number\", \"placeholder\", \"Price of Ticket\", \"formControlName\", \"cost\", 1, \"form-control\"], [\"type\", \"submit\", \"value\", \"update bus\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"text-danger\"]],\n    template: function UpdateBusComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateBusComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"button\", 4);\n        i0.ɵɵtext(5, \" Goto Home\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(6, \"br\")(7, \"br\");\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\");\n        i0.ɵɵtext(10, \"Arrival Busstop\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵtemplate(12, UpdateBusComponent_small_12_Template, 2, 0, \"small\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\");\n        i0.ɵɵtext(15, \"Departure Busstop\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵtemplate(17, UpdateBusComponent_small_17_Template, 2, 0, \"small\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 5)(19, \"label\");\n        i0.ɵɵtext(20, \"Available seats\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 9);\n        i0.ɵɵtemplate(22, UpdateBusComponent_small_22_Template, 2, 0, \"small\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 5)(24, \"label\");\n        i0.ɵɵtext(25, \"Departure Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 10);\n        i0.ɵɵtemplate(27, UpdateBusComponent_small_27_Template, 2, 0, \"small\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 5)(29, \"label\");\n        i0.ɵɵtext(30, \"Arrival Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 11);\n        i0.ɵɵtemplate(32, UpdateBusComponent_small_32_Template, 2, 0, \"small\", 7);\n        i0.ɵɵtemplate(33, UpdateBusComponent_small_33_Template, 2, 0, \"small\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 5)(35, \"label\");\n        i0.ɵɵtext(36, \"Arrival Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 12);\n        i0.ɵɵtemplate(38, UpdateBusComponent_small_38_Template, 2, 0, \"small\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 5)(40, \"label\", 13);\n        i0.ɵɵtext(41, \"Departure Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"input\", 14);\n        i0.ɵɵtemplate(43, UpdateBusComponent_small_43_Template, 2, 0, \"small\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 5)(45, \"label\");\n        i0.ɵɵtext(46, \"Bus Vendor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"input\", 15);\n        i0.ɵɵtemplate(48, UpdateBusComponent_small_48_Template, 2, 0, \"small\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"div\", 5)(50, \"label\", 13);\n        i0.ɵɵtext(51, \"Price of Ticket\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(52, \"input\", 16);\n        i0.ɵɵtemplate(53, UpdateBusComponent_small_53_Template, 2, 0, \"small\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(54, \"input\", 17);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.busForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.busForm.get(\"arrivalBusstop\").invalid && ctx.busForm.get(\"arrivalBusstop\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.busForm.get(\"arrivalBusstop\").invalid && ctx.busForm.get(\"arrivalBusstop\").touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.busForm.get(\"departureBusstop\").invalid && ctx.busForm.get(\"departureBusstop\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.busForm.get(\"departureBusstop\").invalid && ctx.busForm.get(\"departureBusstop\").touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.busForm.get(\"availableSeats\").invalid && ctx.busForm.get(\"availableSeats\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.busForm.get(\"availableSeats\").invalid && ctx.busForm.get(\"availableSeats\").touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.busForm.get(\"departureDate\").invalid && ctx.busForm.get(\"departureDate\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.busForm.get(\"departureDate\").invalid && ctx.busForm.get(\"departureDate\").touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.busForm.get(\"arrivalDate\").invalid && ctx.busForm.get(\"arrivalDate\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.busForm.get(\"arrivalDate\").errors == null ? null : ctx.busForm.get(\"arrivalDate\").errors.required) && ctx.busForm.get(\"arrivalDate\").invalid && ctx.busForm.get(\"arrivalDate\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.busForm.errors == null ? null : ctx.busForm.errors.arrivalDateError);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.busForm.get(\"arrivalTime\").invalid && ctx.busForm.get(\"arrivalTime\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.busForm.get(\"arrivalTime\").invalid && ctx.busForm.get(\"arrivalTime\").touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.busForm.get(\"departureTime\").invalid && ctx.busForm.get(\"departureTime\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.busForm.get(\"departureTime\").invalid && ctx.busForm.get(\"departureTime\").touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.busForm.get(\"busVendor\").invalid && ctx.busForm.get(\"busVendor\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.busForm.get(\"busVendor\").invalid && ctx.busForm.get(\"busVendor\").touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.busForm.get(\"cost\").invalid && ctx.busForm.get(\"cost\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.busForm.get(\"departureTime\").invalid && ctx.busForm.get(\"departureTime\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.busForm.valid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.RouterLink, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgIf, i1.NumberValueAccessor],\n    styles: [\"h3[_ngcontent-%COMP%]{text-align:center}.updateBus[_ngcontent-%COMP%]{width:400px;margin-left:auto;margin-right:auto}\"]\n  });\n  return UpdateBusComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}